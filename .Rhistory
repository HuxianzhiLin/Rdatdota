tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
for (i in 1:patch_length) {
args[[i + tier_length]] <- patch[[1]][i]
}
View(args)
names(args[[4]]) <- "patch"
View(args)
View(args)
names(args[4]]) <- "patch"
View(args)
View(args)
names(args[4]) <- "patch"
View(args)
View(args)
names(args)
names(args[4])
names(args[4]) <- "12431"
View(args)
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
for (i in 1:patch_length) {
args[[i + tier_length]] <- patch[[1]][i]
}
View(args)
tier = "1&2&3",
patch = "7.20&7.19"
#'
#' @examples
#' \dontrun{
#' para_trans()
#' para_trans(after = "2012.01.01", before = "2018.01.01", duration = "0-50", tier = "1")
#' }
#'
#' @return A list of parameters used in get_response function.
#'
#' @export
para_trans <- function(after = "2011.01.01",
before = "2018.01.01",
duration = "0-100",
tier = "1&2&3",
patch = "7.20&7.19",
split = "online",
leagues = "NULL",
valve = "does-not-matter"
) {
#transform the parameters
after <- stringr::str_split(after,"\\.")
after <- paste0(after[[1]][2], "/", after[[1]][3], "/", after[[1]][1])
before <- stringr::str_split(before,"\\.")
before <- paste0(before[[1]][2], "/", before[[1]][3], "/", before[[1]][1])
duration <- stringr::str_split(duration, "-")
duration <- paste0(duration[[1]][1], ";", duration[[1]][2])
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
for (i in 1:patch_length) {
args[[i + tier_length]] <- patch[[1]][i]
}
names(args[4]) <- "patch"
names(args[4]) <- "12431"
#generage final args
args$after <- after
args$before <- before
args$duration <- duration
args$patch <- patch
args$'split-type' <- split
args$leagues <- leagues
args$'valve-event' <- valve
args
}
tier = "1&2&3"
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
for (i in 1:patch_length) {
args[[i + tier_length]] <- patch[[1]][i]
}
names(args[4]) <- "12431"
View(args)
View(args)
names(args[4]) <- "12431"
View(args)
names(args)[4] <- "12431"
View(args)
for(i in tier_length:tier_length + patch_length){
names(arg)[i] <- "patch"
}
for(i in tier_length:tier_length + patch_length){
names(args)[i] <- "patch"
}
View(args)
View(args)
tier_length
patch = "7.20&7.19"
tier = "1&2&3",
tier = "1&2&3"
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
for (i in 1:patch_length) {
args[[i + tier_length]] <- patch[[1]][i]
}
for(i in tier_length:tier_length + patch_length){
names(args)[i] <- "patch"
}
View(args)
for(i in tier_length - 1:tier_length + patch_length){
names(args)[i] <- "patch"
}
View(args)
View(args)
for(i in tier_length + 1:tier_length + patch_length){
names(args)[i] <- "patch"
}
tier = "1&2&3"
patch = "7.20&7.19"
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
for (i in 1:patch_length) {
args[[i + tier_length]] <- patch[[1]][i]
}
for(i in (tier_length + 1):(tier_length + patch_length)){
names(args)[i] <- "patch"
}
View(args)
View(args)
devtools::load_all(".")
devtools::check()
tier = "1&2&3
tier = "1&2&3
tier = "1&2&3
tier = "1&2&3"
tier = "1&2&3"
patch = "7.20&7.19"
split = "online&lan"
#transform tier to make it fit several arguments
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
#transform patch to make it fit several arguments
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
length <- tier_length
for (i in 1:patch_length) {
args[[i + length]] <- patch[[1]][i]
}
for(i in (length + 1):(length + patch_length)){
names(args)[i] <- "patch"
}
#transform split to make it fit several arguments
split <- stringr::str_split(split, "&")
split_length <- length(split[[1]])
length <- length + patch_length
for (i in 1:split_length) {
args[[i + length]] <- patch[[1]][i]
}
for(i in (length + 1):(length + split_length)){
names(args)[i] <- "split-type"
}
View(args)
#transform tier to make it fit several arguments
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
#transform patch to make it fit several arguments
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
length <- tier_length
for (i in 1:patch_length) {
args[[i + length]] <- patch[[1]][i]
}
for(i in (length + 1):(length + patch_length)){
names(args)[i] <- "patch"
}
#transform split to make it fit several arguments
split <- stringr::str_split(split, "&")
split_length <- length(split[[1]])
length <- length + patch_length
for (i in 1:split_length) {
args[[i + length]] <- split[[1]][i]
}
for(i in (length + 1):(length + split_length)){
names(args)[i] <- "split-type"
}
View(args)
View(args)
args <- list()
View(patch)
View(split)
patch = "7.20&7.19"
split = "online&lan"
tier = "1&2&3"
#transform tier to make it fit several arguments
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
#transform patch to make it fit several arguments
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
length <- tier_length
for (i in 1:patch_length) {
args[[i + length]] <- patch[[1]][i]
}
for(i in (length + 1):(length + patch_length)){
names(args)[i] <- "patch"
}
#transform split to make it fit several arguments
split <- stringr::str_split(split, "&")
split_length <- length(split[[1]])
length <- length + patch_length
for (i in 1:split_length) {
args[[i + length]] <- split[[1]][i]
}
for(i in (length + 1):(length + split_length)){
names(args)[i] <- "split-type"
}
View(args)
devtools::load_all(".")
#'
#' @examples
#' \dontrun{
#' para_trans()
#' para_trans(after = "2012.01.01", before = "2018.01.01", duration = "0-50", tier = "1")
#' }
#'
#' @return A list of parameters used in get_response function.
#'
#' @export
para_trans <- function(after = "2011.01.01",
before = "2018.01.01",
duration = "0-100",
tier = "1&2&3",
patch = "7.20&7.19",
split = "online&lan",
leagues = "NULL",
valve = "does-not-matter"
) {
#transform the parameters
after <- stringr::str_split(after,"\\.")
after <- paste0(after[[1]][2], "/", after[[1]][3], "/", after[[1]][1])
before <- stringr::str_split(before,"\\.")
before <- paste0(before[[1]][2], "/", before[[1]][3], "/", before[[1]][1])
duration <- stringr::str_split(duration, "-")
duration <- paste0(duration[[1]][1], ";", duration[[1]][2])
#transform tier to make it fit several arguments
args <- list()
tier <- stringr::str_split(tier, "&")
tier_length <- length(tier[[1]])
if (tier_length == 1) {
args <- list(tier = tier[[1]][1])
}else if (tier_length == 2) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2])
}else if (tier_length == 3) {
args <- list(tier = tier[[1]][1],
tier = tier[[1]][2],
tier = tier[[1]][3])
}
#transform patch to make it fit several arguments
patch <- stringr::str_split(patch, "&")
patch_length <- length(patch[[1]])
length <- tier_length
for (i in 1:patch_length) {
args[[i + length]] <- patch[[1]][i]
}
for(i in (length + 1):(length + patch_length)){
names(args)[i] <- "patch"
}
#transform split to make it fit several arguments
split <- stringr::str_split(split, "&")
split_length <- length(split[[1]])
length <- length + patch_length
for (i in 1:split_length) {
args[[i + length]] <- split[[1]][i]
}
for(i in (length + 1):(length + split_length)){
names(args)[i] <- "split-type"
}
#generage final args
args$after <- after
args$before <- before
args$duration <- duration
args$leagues <- leagues
args$'valve-event' <- valve
args
}
para_trans()
devtools::load_all(".")
get_heroes(patch = "7.19", split = "lan", after = "2011.01.01", before = "2018.07.12",
duration = "0-100", leagues = NULL, tier = "1&2&3", valve = "does-not-matter",
threshold = "1", players = "106863163", teams = "15&18", heroes = "17&15", roles = "core")
abc <- get_heroes(patch = "7.19", split = "lan", after = "2011.01.01", before = "2018.07.12",
duration = "0-100", leagues = NULL, tier = "1&2&3", valve = "does-not-matter",
threshold = "1", players = "106863163", teams = "15&18", heroes = "17&15", roles = "core")
View(abc)
devtools::load_all(".")
abc <- get_heroes(patch = "7.19", split = "lan", after = "2011.01.01", before = "2018.07.12",
duration = "0-100", leagues = NULL, tier = "1&2&3", valve = "does-not-matter",
threshold = "1", players = "106863163", teams = "15&18", heroes = "17&15", roles = "core")
View(abc)
View(abc)
abc <- get_heroes(patch = "7.19&7.20", split = "lan&online", after = "2011.01.01", before = "2018.10.12",
duration = "0-200", leagues = NULL, tier = "1&2", valve = "does-not-matter",
threshold = "1", teams = "15&726228", heroes = "41&75")
View(abc)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
abc <- para_trans()
View(abc)
View(abc)
devtools::load_all(".")
abc <- para_trans()
View(abc)
abc <- para_trans()
abc <- para_trans()
args <- list()
length(args)
devtools::load_all(".")
para_trans()
abc <- para_trans()
View(abc)
tier = "1&2&3"
args <- list()
args <- add_para(new_arg = tier, arg_name = "tier", args = args)
View(args)
patch = "7.20&7.19"
args <- add_para(new_arg = patch, arg_name = "patch", args = args)
args <- add_para(new_arg = patch, arg_name = "patch", args = args)
View(args)
View(args)
split = "online&lan"
args <- add_para(new_arg = split, arg_name = "split-type", args = args)
View(args)
View(args)
length(args)
length(args[[1]])
devtools::load_all(".")
qwe <- para_trans()
View(qwe)
devtools::load_all(".")
get_match(patch = "7.19&7.20", split = "lan", after = "2011.01.01", before = "2018.10.12",
#'           duration = "0-200", leagues = NULL, tier = "1&2", valve = "does-not-matter",
#'           teams_a = "15", teams_b = "2586976", heroes_a = "25&26", heroes_b = "20")
}
get_match(patch = "7.19&7.20", split = "lan", after = "2011.01.01", before = "2018.10.12",
duration = "0-200", leagues = NULL, tier = "1&2", valve = "does-not-matter",
teams_a = "15", teams_b = "2586976", heroes_a = "25&26", heroes_b = "20")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::check()
devtools::load_all(".")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
LOCAL <- identical(Sys.getenv("LOCAL"), "true")
devtools::load_all(".")
str(get_heroes()$content[[1]][1])
devtools::load_all(".")
str(get_match()$content[[1]][1])
str(get_match()$content[[1]][1][1])
str(get_match()$content[[1]][[1][1])
str(get_match()$content[[1]][[1]][1])
str(get_match_length()$content[[1]])
abc <- get_match_length()$content
View(abc)
abc[[1]][[1]][1]
str(get_match_length()$content[[1]][[1]][1])
str(get_match_length()$content[[1]][[2]][1])
str(get_match_length()$content[[1]][[3]][1])
str(get_match_length()$content[[4]])
str(get_match_length()$content[4)
str(get_match_length()$content[4])
str(get_match_length()$content[[1]][[4]])
str(get_match_length()$content[[1]][4]])
str(get_match_length()$content[[1]][4])
devtools::load_all(".")
str(get_player_avg()$content[[1]][[1]])
devtools::load_all(".")
abc <- get_player_records$content
View(abc)
abc <- get_player_records($content
abc <- get_player_records()$content
View(abc)
str(get_player_records()$content[[1]][[1]])
str(get_player_records()$content[[1]]$kills)
str(get_player_records()$content[[1]]$kills[[1]][[1]])
str(get_player_records()$content[[1]]$kills[[1]])
devtools::load_all(".")
str(get_player_single()$content[[1]])
str(get_player_single()$content[[1]][[1]])
devtools::load_all(".")
str(get_player_unique()$content[[1]][[1]])
str(get_team()$content[[1]][[1]])
devtools::load_all(".")
devtools::check()
devtools::build_vignettes()
devtools::build_vignettes()
library(stringi)
devtools::build_vignettes()
install.packages("markdown")
install.packages("stringi")
devtools::load_all(".")
devtools::load_all(".")
install.packages("pkgdown")
pkgdown::build_site()
install.packages("pkgdown")
library(pkgdown)
install.packages("pkgdown")
install.packages("pkgdown")
pkgdown::build_site()
